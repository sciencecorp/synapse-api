syntax = "proto3";

package synapse;

import "api/status.proto";

enum TapTransportType {
    TAP_TRANSPORT_UNKNOWN = 0;

    // A simple udp stream, no reliability 
    TAP_TRANSPORT_UDP = 1;

    // ZMQ Transport
    TAP_TRANSPORT_ZMQ = 2;
}

// A message defining where for the Tap to stream data to
message ReadTapTransportUDP {
    // Client address and port to stream data to
    string address = 1;
    uint32 port = 2;
}

// A message defining where 
message ReadTapTransportZMQ {
  // Nothing to send now, just indicate that we want to establish a 
  // subscription to a ZMQ proxy
}

// For a ReadTap, we need to specify what kind of tap we want
message ReadTapTransportConfig {
    oneof transport_config {
      ReadTapTransportUDP udp = 1;
      ReadTapTransportZMQ zmq = 2;
    }
}

// Read data from the output of a node
message ReadTap {
  ReadTapTransportConfig config = 1;
}

message TapIdentifier {
    // Unique identifier for this created tap, used to request removal of taps
    uint64 connection_id = 1;
}

message CreateTapRequest {
  // Which node to tap
  uint32 node_id = 1;

  oneof tap_type {
    // Read taps use a tap transport config
    ReadTap read_tap = 2;

    // Eventually we could have WriteTaps
  }
}

// A response from the service that indicates where
// the data will be streamed to
message ReadTapUDPConfig {
  string destination_address = 1;
  uint32 port = 2;
}

// A response from the service that indicates where
// the client should connect to
message ReadTapZMQConfig {
  // ZMQ forwarders take the form of
  // tcp://<ip address>:port
  uint32 bind_port = 1;
}


message ReadTapResponse {
  oneof transport_config {
    ReadTapUDPConfig udp = 1;
    ReadTapZMQConfig zmq = 2;
  }
}

message CreateTapResponse {
  StatusCode code = 1;

  // Unique id for the created tap if successful
  TapIdentifier id = 2;

  oneof tap_response {
    ReadTapResponse read_response = 3;
  }
}

message RemoveTapRequest {
  // The tap to remove
  TapIdentifier id = 1;
}

message RemoveTapResponse {
  StatusCode code = 1;
}
