syntax = "proto3";

package synapse;

import "api/datatype.proto";
import "api/nodes/broadband_source.proto";
import "api/nodes/electrical_stimulation.proto";
import "api/nodes/optical_stimulation.proto";
import "api/nodes/spike_detect.proto";
import "api/nodes/spectral_filter.proto";
import "api/nodes/stream_out.proto";
import "api/nodes/stream_in.proto";
import "api/nodes/disk_writer.proto";
import "api/nodes/spike_source.proto";
import "api/nodes/spike_bin.proto";

enum NodeType {
  kNodeTypeUnknown = 0;
  kStreamIn = 1;
  kStreamOut = 2;
  kBroadbandSource = 3;
  kElectricalStimulation = 4;
  kOpticalStimulation = 5;
  kSpikeDetect = 6;
  kSpikeSource = 7;
  kSpectralFilter = 8;
  kDiskWriter = 9;
  kSpikeBin = 10;
}

message NodeConfig {
  NodeType type = 1;
  uint32 id = 2;
  oneof config {
    StreamOutConfig stream_out = 3;
    StreamInConfig stream_in = 4;
    BroadbandSourceConfig broadband_source = 5;
    ElectricalStimulationConfig electrical_stimulation = 6;
    OpticalStimulationConfig optical_stimulation = 8;
    SpikeDetectConfig spike_detect = 9;
    SpectralFilterConfig spectral_filter = 10;
    DiskWriterConfig disk_writer = 11;
    SpikeSourceConfig spike_source = 12;
    SpikeBinConfig spike_bin = 13;
  }
}

message NodeStatus {
  NodeType type = 1;
  uint32 id = 2;
  oneof status {
    StreamOutStatus stream_out = 3;
    BroadbandSourceStatus broadband_source = 4;
    StreamInStatus stream_in = 5;
    ElectricalStimulationStatus electrical_stimulation = 6;
  }
}

message NodeConnection {
  uint32 src_node_id = 1;
  uint32 dst_node_id = 2;
}

message NodeSocket {
  uint32 node_id = 1;
  string bind = 2;
  DataType data_type = 3;
  NodeType type = 4;
  string label = 5;
  repeated uint32 shape = 6;
}